

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 29 20:20:14 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	idataCOMMON
   110  0752                     __pidataCOMMON:	
   111                           
   112                           ;initializer for _port_deger
   113  0752  3401               	retlw	1
   114                           
   115                           	psect	idataBANK0
   116  0753                     __pidataBANK0:	
   117                           
   118                           ;initializer for _i
   119  0753  3401               	retlw	1
   120  0754  3400               	retlw	0
   121  0006                     _PORTB	set	6
   122  0086                     _TRISB	set	134
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  07EC                     start_initialization:	
   128  07EC                     __initialization:	
   129                           
   130                           ; Initialize objects allocated to BANK0
   131  07EC  120A  118A  2753  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   132  07F1  00A0               	movwf	__pdataBANK0& (0+127)
   133  07F2  120A  118A  2754  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   134  07F7  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   135                           
   136                           ; Initialize objects allocated to COMMON
   137  07F8  120A  118A  2752   	fcall	__pidataCOMMON	;fetch initializer
   138  07FB  00FC               	movwf	__pdataCOMMON& (0+127)
   139  07FC                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  07FC                     __end_of__initialization:	
   143  07FC  0183               	clrf	3
   144  07FD  120A  118A  2F55   	ljmp	_main	;jump to C main() function
   145                           
   146                           	psect	dataCOMMON
   147  007C                     __pdataCOMMON:	
   148  007C                     _port_deger:	
   149  007C                     	ds	1
   150                           
   151                           	psect	dataBANK0
   152  0020                     __pdataBANK0:	
   153  0020                     _i:	
   154  0020                     	ds	2
   155                           
   156                           	psect	cstackCOMMON
   157  0070                     __pcstackCOMMON:	
   158  0070                     ?_main:	
   159  0070                     ?___awdiv:	
   160                           ; 1 bytes @ 0x0
   161                           
   162  0070                     ___awdiv@divisor:	
   163                           ; 2 bytes @ 0x0
   164                           
   165                           
   166                           ; 2 bytes @ 0x0
   167  0070                     	ds	2
   168  0072                     ___awdiv@dividend:	
   169                           
   170                           ; 2 bytes @ 0x2
   171  0072                     	ds	2
   172  0074                     ??___awdiv:	
   173                           
   174                           ; 1 bytes @ 0x4
   175  0074                     	ds	1
   176  0075                     ___awdiv@counter:	
   177                           
   178                           ; 1 bytes @ 0x5
   179  0075                     	ds	1
   180  0076                     ___awdiv@sign:	
   181                           
   182                           ; 1 bytes @ 0x6
   183  0076                     	ds	1
   184  0077                     ___awdiv@quotient:	
   185                           
   186                           ; 2 bytes @ 0x7
   187  0077                     	ds	2
   188  0079                     ??_main:	
   189                           
   190                           ; 1 bytes @ 0x9
   191  0079                     	ds	3
   192                           
   193                           	psect	maintext
   194  0755                     __pmaintext:	
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 22 in file "mcu2.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;		None
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, status,2, status,0, pclath, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : B00/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   214 ;;      Params:         0       0       0       0       0
   215 ;;      Locals:         0       0       0       0       0
   216 ;;      Temps:          3       0       0       0       0
   217 ;;      Totals:         3       0       0       0       0
   218 ;;Total ram usage:        3 bytes
   219 ;; Hardware stack levels required when called:    1
   220 ;; This function calls:
   221 ;;		___awdiv
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           
   228                           ;psect for function _main
   229  0755                     _main:	
   230                           
   231                           ;mcu2.c: 23: TRISB=0x00;
   232                           
   233                           ;incstack = 0
   234                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   235  0755  1683               	bsf	3,5	;RP0=1, select bank1
   236  0756  1303               	bcf	3,6	;RP1=0, select bank1
   237  0757  0186               	clrf	6	;volatile
   238                           
   239                           ;mcu2.c: 24: PORTB=0x00;
   240  0758  1283               	bcf	3,5	;RP0=0, select bank0
   241  0759  1303               	bcf	3,6	;RP1=0, select bank0
   242  075A  0186               	clrf	6	;volatile
   243  075B                     l586:	
   244                           ;mcu2.c: 26: while(port_deger<256){
   245                           
   246                           ;mcu2.c: 25: while(1){
   247                           
   248                           
   249                           ;mcu2.c: 27: PORTB=port_deger;
   250  075B  087C               	movf	_port_deger,w
   251  075C  1283               	bcf	3,5	;RP0=0, select bank0
   252  075D  1303               	bcf	3,6	;RP1=0, select bank0
   253  075E  0086               	movwf	6	;volatile
   254                           
   255                           ;mcu2.c: 28: _delay((unsigned long)((150)*(4000000/4000.0)));
   256  075F  30C3               	movlw	195
   257  0760  00FA               	movwf	??_main+1
   258  0761  30CD               	movlw	205
   259  0762  00F9               	movwf	??_main
   260  0763                     u237:	
   261  0763  0BF9               	decfsz	??_main,f
   262  0764  2F63               	goto	u237
   263  0765  0BFA               	decfsz	??_main+1,f
   264  0766  2F63               	goto	u237
   265                           
   266                           ;mcu2.c: 29: port_deger=port_deger*2;
   267  0767  087C               	movf	_port_deger,w
   268  0768  00F9               	movwf	??_main
   269  0769  0779               	addwf	??_main,w
   270  076A  00FA               	movwf	??_main+1
   271  076B  087A               	movf	??_main+1,w
   272  076C  00FC               	movwf	_port_deger
   273  076D  2F5B               	goto	l586
   274  076E                     l590:	
   275                           ;mcu2.c: 31: }
   276                           ;mcu2.c: 32: while(port_deger>1){
   277                           
   278                           
   279                           ;mcu2.c: 33: PORTB=port_deger;
   280  076E  087C               	movf	_port_deger,w
   281  076F  1283               	bcf	3,5	;RP0=0, select bank0
   282  0770  1303               	bcf	3,6	;RP1=0, select bank0
   283  0771  0086               	movwf	6	;volatile
   284                           
   285                           ;mcu2.c: 34: _delay((unsigned long)((150)*(4000000/4000.0)));
   286  0772  30C3               	movlw	195
   287  0773  00FA               	movwf	??_main+1
   288  0774  30CD               	movlw	205
   289  0775  00F9               	movwf	??_main
   290  0776                     u247:	
   291  0776  0BF9               	decfsz	??_main,f
   292  0777  2F76               	goto	u247
   293  0778  0BFA               	decfsz	??_main+1,f
   294  0779  2F76               	goto	u247
   295                           
   296                           ;mcu2.c: 35: port_deger=port_deger/2;
   297  077A  3002               	movlw	2
   298  077B  00F0               	movwf	___awdiv@divisor
   299  077C  3000               	movlw	0
   300  077D  00F1               	movwf	___awdiv@divisor+1
   301  077E  087C               	movf	_port_deger,w
   302  077F  00F9               	movwf	??_main
   303  0780  01FA               	clrf	??_main+1
   304  0781  0879               	movf	??_main,w
   305  0782  00F2               	movwf	___awdiv@dividend
   306  0783  087A               	movf	??_main+1,w
   307  0784  00F3               	movwf	___awdiv@dividend+1
   308  0785  120A  118A  2793  120A  118A  	fcall	___awdiv
   309  078A  0870               	movf	?___awdiv,w
   310  078B  00FB               	movwf	??_main+2
   311  078C  087B               	movf	??_main+2,w
   312  078D  00FC               	movwf	_port_deger
   313  078E  3002               	movlw	2
   314  078F  027C               	subwf	_port_deger,w
   315  0790  1C03               	btfss	3,0
   316  0791  2F5B               	goto	l586
   317  0792  2F6E               	goto	l590
   318  0793                     __end_of_main:	
   319                           
   320                           	psect	text1
   321  0793                     __ptext1:	
   322 ;; *************** function ___awdiv *****************
   323 ;; Defined at:
   324 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  divisor         2    0[COMMON] int 
   327 ;;  dividend        2    2[COMMON] int 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  quotient        2    7[COMMON] int 
   330 ;;  sign            1    6[COMMON] unsigned char 
   331 ;;  counter         1    5[COMMON] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  2    0[COMMON] int 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   341 ;;      Params:         4       0       0       0       0
   342 ;;      Locals:         4       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0
   344 ;;      Totals:         9       0       0       0       0
   345 ;;Total ram usage:        9 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function ___awdiv
   356  0793                     ___awdiv:	
   357                           
   358                           ;incstack = 0
   359                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   360  0793  01F6               	clrf	___awdiv@sign
   361  0794  1FF1               	btfss	___awdiv@divisor+1,7
   362  0795  2F9D               	goto	l548
   363  0796  09F0               	comf	___awdiv@divisor,f
   364  0797  09F1               	comf	___awdiv@divisor+1,f
   365  0798  0AF0               	incf	___awdiv@divisor,f
   366  0799  1903               	skipnz
   367  079A  0AF1               	incf	___awdiv@divisor+1,f
   368  079B  01F6               	clrf	___awdiv@sign
   369  079C  0AF6               	incf	___awdiv@sign,f
   370  079D                     l548:	
   371  079D  1FF3               	btfss	___awdiv@dividend+1,7
   372  079E  2FA8               	goto	l554
   373  079F  09F2               	comf	___awdiv@dividend,f
   374  07A0  09F3               	comf	___awdiv@dividend+1,f
   375  07A1  0AF2               	incf	___awdiv@dividend,f
   376  07A2  1903               	skipnz
   377  07A3  0AF3               	incf	___awdiv@dividend+1,f
   378  07A4  3001               	movlw	1
   379  07A5  00F4               	movwf	??___awdiv
   380  07A6  0874               	movf	??___awdiv,w
   381  07A7  06F6               	xorwf	___awdiv@sign,f
   382  07A8                     l554:	
   383  07A8  01F7               	clrf	___awdiv@quotient
   384  07A9  01F8               	clrf	___awdiv@quotient+1
   385  07AA  0870               	movf	___awdiv@divisor,w
   386  07AB  0471               	iorwf	___awdiv@divisor+1,w
   387  07AC  1903               	btfsc	3,2
   388  07AD  2FDF               	goto	l576
   389  07AE  01F5               	clrf	___awdiv@counter
   390  07AF  0AF5               	incf	___awdiv@counter,f
   391  07B0                     l564:	
   392  07B0  1BF1               	btfsc	___awdiv@divisor+1,7
   393  07B1  2FBE               	goto	l566
   394  07B2  3001               	movlw	1
   395  07B3                     u155:	
   396  07B3  1003               	clrc
   397  07B4  0DF0               	rlf	___awdiv@divisor,f
   398  07B5  0DF1               	rlf	___awdiv@divisor+1,f
   399  07B6  3EFF               	addlw	-1
   400  07B7  1D03               	skipz
   401  07B8  2FB3               	goto	u155
   402  07B9  3001               	movlw	1
   403  07BA  00F4               	movwf	??___awdiv
   404  07BB  0874               	movf	??___awdiv,w
   405  07BC  07F5               	addwf	___awdiv@counter,f
   406  07BD  2FB0               	goto	l564
   407  07BE                     l566:	
   408  07BE  3001               	movlw	1
   409  07BF                     u175:	
   410  07BF  1003               	clrc
   411  07C0  0DF7               	rlf	___awdiv@quotient,f
   412  07C1  0DF8               	rlf	___awdiv@quotient+1,f
   413  07C2  3EFF               	addlw	-1
   414  07C3  1D03               	skipz
   415  07C4  2FBF               	goto	u175
   416  07C5  0871               	movf	___awdiv@divisor+1,w
   417  07C6  0273               	subwf	___awdiv@dividend+1,w
   418  07C7  1D03               	skipz
   419  07C8  2FCB               	goto	u185
   420  07C9  0870               	movf	___awdiv@divisor,w
   421  07CA  0272               	subwf	___awdiv@dividend,w
   422  07CB                     u185:	
   423  07CB  1C03               	skipc
   424  07CC  2FD4               	goto	l572
   425  07CD  0870               	movf	___awdiv@divisor,w
   426  07CE  02F2               	subwf	___awdiv@dividend,f
   427  07CF  0871               	movf	___awdiv@divisor+1,w
   428  07D0  1C03               	skipc
   429  07D1  03F3               	decf	___awdiv@dividend+1,f
   430  07D2  02F3               	subwf	___awdiv@dividend+1,f
   431  07D3  1477               	bsf	___awdiv@quotient,0
   432  07D4                     l572:	
   433  07D4  3001               	movlw	1
   434  07D5                     u195:	
   435  07D5  1003               	clrc
   436  07D6  0CF1               	rrf	___awdiv@divisor+1,f
   437  07D7  0CF0               	rrf	___awdiv@divisor,f
   438  07D8  3EFF               	addlw	-1
   439  07D9  1D03               	skipz
   440  07DA  2FD5               	goto	u195
   441  07DB  3001               	movlw	1
   442  07DC  02F5               	subwf	___awdiv@counter,f
   443  07DD  1D03               	btfss	3,2
   444  07DE  2FBE               	goto	l566
   445  07DF                     l576:	
   446  07DF  0876               	movf	___awdiv@sign,w
   447  07E0  1903               	btfsc	3,2
   448  07E1  2FE7               	goto	l580
   449  07E2  09F7               	comf	___awdiv@quotient,f
   450  07E3  09F8               	comf	___awdiv@quotient+1,f
   451  07E4  0AF7               	incf	___awdiv@quotient,f
   452  07E5  1903               	skipnz
   453  07E6  0AF8               	incf	___awdiv@quotient+1,f
   454  07E7                     l580:	
   455  07E7  0878               	movf	___awdiv@quotient+1,w
   456  07E8  00F1               	movwf	?___awdiv+1
   457  07E9  0877               	movf	___awdiv@quotient,w
   458  07EA  00F0               	movwf	?___awdiv
   459  07EB  0008               	return
   460  07EC                     __end_of___awdiv:	
   461  007E                     btemp	set	126	;btemp
   462  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     406
                                              9 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 29 20:20:14 2020

                      _i 0020              __CFG_CP$OFF 0000             ___awdiv@sign 0076  
            __CFG_LVP$ON 0000                      l554 07A8                      l580 07E7  
                    l572 07D4                      l564 07B0                      l548 079D  
                    l566 07BE                      l590 076E                      l576 07DF  
                    l586 075B                      u155 07B3                      u237 0763  
                    u175 07BF                      u247 0776                      u185 07CB  
           __CFG_CPD$OFF 0000                      u195 07D5             __CFG_FOSC$XT 0000  
           __CFG_WRT$OFF 0000                     _main 0755                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0070  
        __end_of___awdiv 07EC            __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 007E          __initialization 07EC  
           __end_of_main 0793                   ??_main 0079         ___awdiv@dividend 0072  
         __CFG_PWRTE$OFF 0000                ??___awdiv 0074         ___awdiv@quotient 0077  
           __pdataCOMMON 007C  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0753               __pmaintext 0755                  ___awdiv 0793  
                __ptext1 0793     end_of_initialization 07FC               _port_deger 007C  
          __pidataCOMMON 0752      start_initialization 07EC              __pdataBANK0 0020  
              ___latbits 0002                 ?___awdiv 0070         __size_of___awdiv 0059  
          __size_of_main 003E  
