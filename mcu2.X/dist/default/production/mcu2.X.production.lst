

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 02 21:11:38 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106                           
   107                           	psect	idataCOMMON
   108  074B                     __pidataCOMMON:	
   109                           
   110                           ;initializer for _port_deger
   111  074B  3401               	retlw	1
   112  074C  3400               	retlw	0
   113  0006                     _PORTB	set	6
   114  0086                     _TRISB	set	134
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  07F2                     start_initialization:	
   120  07F2                     __initialization:	
   121                           
   122                           ; Initialize objects allocated to COMMON
   123  07F2  120A  118A  274B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   124  07F7  00FB               	movwf	__pdataCOMMON& (0+127)
   125  07F8  120A  118A  274C   	fcall	__pidataCOMMON+1	;fetch initializer
   126  07FB  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   127  07FC                     end_of_initialization:	
   128                           ;End of C runtime variable initialization code
   129                           
   130  07FC                     __end_of__initialization:	
   131  07FC  0183               	clrf	3
   132  07FD  120A  118A  2F4D   	ljmp	_main	;jump to C main() function
   133                           
   134                           	psect	dataCOMMON
   135  007B                     __pdataCOMMON:	
   136  007B                     _port_deger:	
   137  007B                     	ds	2
   138                           
   139                           	psect	cstackCOMMON
   140  0070                     __pcstackCOMMON:	
   141  0070                     ?_main:	
   142  0070                     ?___awdiv:	
   143                           ; 1 bytes @ 0x0
   144                           
   145  0070                     ___awdiv@divisor:	
   146                           ; 2 bytes @ 0x0
   147                           
   148                           
   149                           ; 2 bytes @ 0x0
   150  0070                     	ds	2
   151  0072                     ___awdiv@dividend:	
   152                           
   153                           ; 2 bytes @ 0x2
   154  0072                     	ds	2
   155  0074                     ??___awdiv:	
   156                           
   157                           ; 1 bytes @ 0x4
   158  0074                     	ds	1
   159  0075                     ___awdiv@counter:	
   160                           
   161                           ; 1 bytes @ 0x5
   162  0075                     	ds	1
   163  0076                     ___awdiv@sign:	
   164                           
   165                           ; 1 bytes @ 0x6
   166  0076                     	ds	1
   167  0077                     ___awdiv@quotient:	
   168                           
   169                           ; 2 bytes @ 0x7
   170  0077                     	ds	2
   171  0079                     ??_main:	
   172                           
   173                           ; 1 bytes @ 0x9
   174  0079                     	ds	2
   175                           
   176                           	psect	maintext
   177  074D                     __pmaintext:	
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 20 in file "mcu2.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : B00/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   197 ;;      Params:         0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0
   199 ;;      Temps:          2       0       0       0       0
   200 ;;      Totals:         2       0       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels required when called:    1
   203 ;; This function calls:
   204 ;;		___awdiv
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _main
   212  074D                     _main:	
   213                           
   214                           ;mcu2.c: 21: TRISB=0x00;
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   218  074D  1683               	bsf	3,5	;RP0=1, select bank1
   219  074E  1303               	bcf	3,6	;RP1=0, select bank1
   220  074F  0186               	clrf	6	;volatile
   221                           
   222                           ;mcu2.c: 22: PORTB=0x00;
   223  0750  1283               	bcf	3,5	;RP0=0, select bank0
   224  0751  1303               	bcf	3,6	;RP1=0, select bank0
   225  0752  0186               	clrf	6	;volatile
   226  0753                     l586:	
   227                           ;mcu2.c: 24: while(port_deger<256){
   228                           
   229                           ;mcu2.c: 23: while(1){
   230                           
   231  0753  087C               	movf	_port_deger+1,w
   232  0754  3A80               	xorlw	128
   233  0755  00FF               	movwf	127
   234  0756  3081               	movlw	129
   235  0757  027F               	subwf	127,w
   236  0758  1D03               	skipz
   237  0759  2F5C               	goto	u235
   238  075A  3000               	movlw	0
   239  075B  027B               	subwf	_port_deger,w
   240  075C                     u235:	
   241  075C  1803               	btfsc	3,0
   242  075D  2F8D               	goto	l592
   243                           
   244                           ;mcu2.c: 25: PORTB=port_deger;
   245  075E  087B               	movf	_port_deger,w
   246  075F  1283               	bcf	3,5	;RP0=0, select bank0
   247  0760  1303               	bcf	3,6	;RP1=0, select bank0
   248  0761  0086               	movwf	6	;volatile
   249                           
   250                           ;mcu2.c: 26: _delay((unsigned long)((150)*(4000000/4000.0)));
   251  0762  30C3               	movlw	195
   252  0763  00FA               	movwf	??_main+1
   253  0764  30CD               	movlw	205
   254  0765  00F9               	movwf	??_main
   255  0766                     u257:	
   256  0766  0BF9               	decfsz	??_main,f
   257  0767  2F66               	goto	u257
   258  0768  0BFA               	decfsz	??_main+1,f
   259  0769  2F66               	goto	u257
   260                           
   261                           ;mcu2.c: 27: port_deger=port_deger*2;
   262  076A  1003               	clrc
   263  076B  0D7B               	rlf	_port_deger,w
   264  076C  00FB               	movwf	_port_deger
   265  076D  0D7C               	rlf	_port_deger+1,w
   266  076E  00FC               	movwf	_port_deger+1
   267  076F  2F53               	goto	l586
   268  0770                     l588:	
   269                           ;mcu2.c: 29: }
   270                           ;mcu2.c: 30: while(port_deger>1){
   271                           
   272                           
   273                           ;mcu2.c: 31: PORTB=port_deger;
   274  0770  087B               	movf	_port_deger,w
   275  0771  1283               	bcf	3,5	;RP0=0, select bank0
   276  0772  1303               	bcf	3,6	;RP1=0, select bank0
   277  0773  0086               	movwf	6	;volatile
   278                           
   279                           ;mcu2.c: 32: _delay((unsigned long)((150)*(4000000/4000.0)));
   280  0774  30C3               	movlw	195
   281  0775  00FA               	movwf	??_main+1
   282  0776  30CD               	movlw	205
   283  0777  00F9               	movwf	??_main
   284  0778                     u267:	
   285  0778  0BF9               	decfsz	??_main,f
   286  0779  2F78               	goto	u267
   287  077A  0BFA               	decfsz	??_main+1,f
   288  077B  2F78               	goto	u267
   289                           
   290                           ;mcu2.c: 33: port_deger=port_deger/2;
   291  077C  3002               	movlw	2
   292  077D  00F0               	movwf	___awdiv@divisor
   293  077E  3000               	movlw	0
   294  077F  00F1               	movwf	___awdiv@divisor+1
   295  0780  087C               	movf	_port_deger+1,w
   296  0781  00F3               	movwf	___awdiv@dividend+1
   297  0782  087B               	movf	_port_deger,w
   298  0783  00F2               	movwf	___awdiv@dividend
   299  0784  120A  118A  2799  120A  118A  	fcall	___awdiv
   300  0789  0871               	movf	?___awdiv+1,w
   301  078A  00FC               	movwf	_port_deger+1
   302  078B  0870               	movf	?___awdiv,w
   303  078C  00FB               	movwf	_port_deger
   304  078D                     l592:	
   305  078D  087C               	movf	_port_deger+1,w
   306  078E  3A80               	xorlw	128
   307  078F  00FF               	movwf	127
   308  0790  3080               	movlw	128
   309  0791  027F               	subwf	127,w
   310  0792  1D03               	skipz
   311  0793  2F96               	goto	u245
   312  0794  3002               	movlw	2
   313  0795  027B               	subwf	_port_deger,w
   314  0796                     u245:	
   315  0796  1C03               	btfss	3,0
   316  0797  2F53               	goto	l586
   317  0798  2F70               	goto	l588
   318  0799                     __end_of_main:	
   319                           
   320                           	psect	text1
   321  0799                     __ptext1:	
   322 ;; *************** function ___awdiv *****************
   323 ;; Defined at:
   324 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  divisor         2    0[COMMON] int 
   327 ;;  dividend        2    2[COMMON] int 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  quotient        2    7[COMMON] int 
   330 ;;  sign            1    6[COMMON] unsigned char 
   331 ;;  counter         1    5[COMMON] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  2    0[COMMON] int 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   341 ;;      Params:         4       0       0       0       0
   342 ;;      Locals:         4       0       0       0       0
   343 ;;      Temps:          1       0       0       0       0
   344 ;;      Totals:         9       0       0       0       0
   345 ;;Total ram usage:        9 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function ___awdiv
   356  0799                     ___awdiv:	
   357                           
   358                           ;incstack = 0
   359                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   360  0799  01F6               	clrf	___awdiv@sign
   361  079A  1FF1               	btfss	___awdiv@divisor+1,7
   362  079B  2FA3               	goto	l546
   363  079C  09F0               	comf	___awdiv@divisor,f
   364  079D  09F1               	comf	___awdiv@divisor+1,f
   365  079E  0AF0               	incf	___awdiv@divisor,f
   366  079F  1903               	skipnz
   367  07A0  0AF1               	incf	___awdiv@divisor+1,f
   368  07A1  01F6               	clrf	___awdiv@sign
   369  07A2  0AF6               	incf	___awdiv@sign,f
   370  07A3                     l546:	
   371  07A3  1FF3               	btfss	___awdiv@dividend+1,7
   372  07A4  2FAE               	goto	l552
   373  07A5  09F2               	comf	___awdiv@dividend,f
   374  07A6  09F3               	comf	___awdiv@dividend+1,f
   375  07A7  0AF2               	incf	___awdiv@dividend,f
   376  07A8  1903               	skipnz
   377  07A9  0AF3               	incf	___awdiv@dividend+1,f
   378  07AA  3001               	movlw	1
   379  07AB  00F4               	movwf	??___awdiv
   380  07AC  0874               	movf	??___awdiv,w
   381  07AD  06F6               	xorwf	___awdiv@sign,f
   382  07AE                     l552:	
   383  07AE  01F7               	clrf	___awdiv@quotient
   384  07AF  01F8               	clrf	___awdiv@quotient+1
   385  07B0  0870               	movf	___awdiv@divisor,w
   386  07B1  0471               	iorwf	___awdiv@divisor+1,w
   387  07B2  1903               	btfsc	3,2
   388  07B3  2FE5               	goto	l574
   389  07B4  01F5               	clrf	___awdiv@counter
   390  07B5  0AF5               	incf	___awdiv@counter,f
   391  07B6                     l562:	
   392  07B6  1BF1               	btfsc	___awdiv@divisor+1,7
   393  07B7  2FC4               	goto	l564
   394  07B8  3001               	movlw	1
   395  07B9                     u165:	
   396  07B9  1003               	clrc
   397  07BA  0DF0               	rlf	___awdiv@divisor,f
   398  07BB  0DF1               	rlf	___awdiv@divisor+1,f
   399  07BC  3EFF               	addlw	-1
   400  07BD  1D03               	skipz
   401  07BE  2FB9               	goto	u165
   402  07BF  3001               	movlw	1
   403  07C0  00F4               	movwf	??___awdiv
   404  07C1  0874               	movf	??___awdiv,w
   405  07C2  07F5               	addwf	___awdiv@counter,f
   406  07C3  2FB6               	goto	l562
   407  07C4                     l564:	
   408  07C4  3001               	movlw	1
   409  07C5                     u185:	
   410  07C5  1003               	clrc
   411  07C6  0DF7               	rlf	___awdiv@quotient,f
   412  07C7  0DF8               	rlf	___awdiv@quotient+1,f
   413  07C8  3EFF               	addlw	-1
   414  07C9  1D03               	skipz
   415  07CA  2FC5               	goto	u185
   416  07CB  0871               	movf	___awdiv@divisor+1,w
   417  07CC  0273               	subwf	___awdiv@dividend+1,w
   418  07CD  1D03               	skipz
   419  07CE  2FD1               	goto	u195
   420  07CF  0870               	movf	___awdiv@divisor,w
   421  07D0  0272               	subwf	___awdiv@dividend,w
   422  07D1                     u195:	
   423  07D1  1C03               	skipc
   424  07D2  2FDA               	goto	l570
   425  07D3  0870               	movf	___awdiv@divisor,w
   426  07D4  02F2               	subwf	___awdiv@dividend,f
   427  07D5  0871               	movf	___awdiv@divisor+1,w
   428  07D6  1C03               	skipc
   429  07D7  03F3               	decf	___awdiv@dividend+1,f
   430  07D8  02F3               	subwf	___awdiv@dividend+1,f
   431  07D9  1477               	bsf	___awdiv@quotient,0
   432  07DA                     l570:	
   433  07DA  3001               	movlw	1
   434  07DB                     u205:	
   435  07DB  1003               	clrc
   436  07DC  0CF1               	rrf	___awdiv@divisor+1,f
   437  07DD  0CF0               	rrf	___awdiv@divisor,f
   438  07DE  3EFF               	addlw	-1
   439  07DF  1D03               	skipz
   440  07E0  2FDB               	goto	u205
   441  07E1  3001               	movlw	1
   442  07E2  02F5               	subwf	___awdiv@counter,f
   443  07E3  1D03               	btfss	3,2
   444  07E4  2FC4               	goto	l564
   445  07E5                     l574:	
   446  07E5  0876               	movf	___awdiv@sign,w
   447  07E6  1903               	btfsc	3,2
   448  07E7  2FED               	goto	l578
   449  07E8  09F7               	comf	___awdiv@quotient,f
   450  07E9  09F8               	comf	___awdiv@quotient+1,f
   451  07EA  0AF7               	incf	___awdiv@quotient,f
   452  07EB  1903               	skipnz
   453  07EC  0AF8               	incf	___awdiv@quotient+1,f
   454  07ED                     l578:	
   455  07ED  0878               	movf	___awdiv@quotient+1,w
   456  07EE  00F1               	movwf	?___awdiv+1
   457  07EF  0877               	movf	___awdiv@quotient,w
   458  07F0  00F0               	movwf	?___awdiv
   459  07F1  0008               	return
   460  07F2                     __end_of___awdiv:	
   461  007E                     btemp	set	126	;btemp
   462  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     406
                                              9 COMMON     2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 02 21:11:38 2020

            __CFG_CP$OFF 0000             ___awdiv@sign 0076              __CFG_LVP$ON 0000  
                    l552 07AE                      l570 07DA                      l562 07B6  
                    l546 07A3                      l564 07C4                      l574 07E5  
                    l592 078D                      l578 07ED                      l586 0753  
                    l588 0770                      u205 07DB                      u235 075C  
                    u165 07B9                      u245 0796                      u185 07C5  
                    u257 0766             __CFG_CPD$OFF 0000                      u195 07D1  
                    u267 0778             __CFG_FOSC$XT 0000             __CFG_WRT$OFF 0000  
                   _main 074D                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000                    ?_main 0070          __end_of___awdiv 07F2  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTB 0006                    _TRISB 0086                    status 0003  
                  wtemp0 007E          __initialization 07F2             __end_of_main 0799  
                 ??_main 0079         ___awdiv@dividend 0072           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0074         ___awdiv@quotient 0077             __pdataCOMMON 007B  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 074D  
                ___awdiv 0799                  __ptext1 0799     end_of_initialization 07FC  
             _port_deger 007B            __pidataCOMMON 074B      start_initialization 07F2  
              ___latbits 0002                 ?___awdiv 0070         __size_of___awdiv 0059  
          __size_of_main 004C  
