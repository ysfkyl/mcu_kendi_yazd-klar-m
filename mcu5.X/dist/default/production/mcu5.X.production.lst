

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 06 21:40:37 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105                           
   106                           	psect	strings
   107  0003                     __pstrings:	
   108  0003                     stringtab:	
   109  0003                     __stringtab:	
   110  0003                     stringcode:	
   111                           ;	String table - string pointers are 1 byte each
   112                           
   113  0003                     stringdir:	
   114  0003  3000               	movlw	high stringdir
   115  0004  008A               	movwf	10
   116  0005  0804               	movf	4,w
   117  0006  0A84               	incf	4,f
   118  0007  0782               	addwf	2,f
   119  0008                     __stringbase:	
   120  0008  3400               	retlw	0
   121  0009                     __end_of__stringtab:	
   122  0009                     _dizi:	
   123  0009  343F               	retlw	63
   124  000A  3406               	retlw	6
   125  000B  345B               	retlw	91
   126  000C  344F               	retlw	79
   127  000D  3466               	retlw	102
   128  000E  346D               	retlw	109
   129  000F  347D               	retlw	125
   130  0010  3407               	retlw	7
   131  0011  347F               	retlw	127
   132  0012  346F               	retlw	111
   133  0013                     __end_of_dizi:	
   134  0008                     _PORTD	set	8
   135  0006                     _PORTB	set	6
   136  0041                     _RD1	set	65
   137  0040                     _RD0	set	64
   138  0088                     _TRISD	set	136
   139  0086                     _TRISB	set	134
   140                           
   141                           ; #config settings
   142  0000                     
   143                           	psect	cinit
   144  07FA                     start_initialization:	
   145  07FA                     __initialization:	
   146                           
   147                           ; Clear objects allocated to COMMON
   148  07FA  01F0               	clrf	__pbssCOMMON& (0+127)
   149  07FB  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   150  07FC                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  07FC                     __end_of__initialization:	
   154  07FC  0183               	clrf	3
   155  07FD  120A  118A  2F92   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	bssCOMMON
   158  0070                     __pbssCOMMON:	
   159  0070                     _i:	
   160  0070                     	ds	2
   161                           
   162                           	psect	cstackCOMMON
   163  0072                     __pcstackCOMMON:	
   164  0072                     ?_main:	
   165  0072                     ??_main:	
   166                           ; 1 bytes @ 0x0
   167                           
   168                           
   169                           ; 1 bytes @ 0x0
   170  0072                     	ds	2
   171                           
   172                           	psect	maintext
   173  0792                     __pmaintext:	
   174 ;;
   175 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   176 ;;
   177 ;; *************** function _main *****************
   178 ;; Defined at:
   179 ;;		line 16 in file "mcu5.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   188 ;; Tracked objects:
   189 ;;		On entry : B00/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   193 ;;      Params:         0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0
   195 ;;      Temps:          2       0       0       0       0
   196 ;;      Totals:         2       0       0       0       0
   197 ;;Total ram usage:        2 bytes
   198 ;; Hardware stack levels used:    1
   199 ;; This function calls:
   200 ;;		Nothing
   201 ;; This function is called by:
   202 ;;		Startup code after reset
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           
   207                           ;psect for function _main
   208  0792                     _main:	
   209                           
   210                           ;mcu5.c: 17: TRISB=0x00;
   211                           
   212                           ;incstack = 0
   213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   214  0792  1683               	bsf	3,5	;RP0=1, select bank1
   215  0793  1303               	bcf	3,6	;RP1=0, select bank1
   216  0794  0186               	clrf	6	;volatile
   217                           
   218                           ;mcu5.c: 18: PORTB=0x00;
   219  0795  1283               	bcf	3,5	;RP0=0, select bank0
   220  0796  1303               	bcf	3,6	;RP1=0, select bank0
   221  0797  0186               	clrf	6	;volatile
   222                           
   223                           ;mcu5.c: 19: TRISD=0b00000011;
   224  0798  3003               	movlw	3
   225  0799  1683               	bsf	3,5	;RP0=1, select bank1
   226  079A  1303               	bcf	3,6	;RP1=0, select bank1
   227  079B  0088               	movwf	8	;volatile
   228                           
   229                           ;mcu5.c: 20: PORTD=0x00;
   230  079C  1283               	bcf	3,5	;RP0=0, select bank0
   231  079D  1303               	bcf	3,6	;RP1=0, select bank0
   232  079E  0188               	clrf	8	;volatile
   233                           
   234                           ;mcu5.c: 21: PORTB=dizi[i];
   235  079F  0870               	movf	_i,w
   236  07A0  3E01               	addlw	low ((_dizi-__stringbase)| (0+32768))
   237  07A1  0084               	movwf	4
   238  07A2  120A  118A  2003  120A  118A  	fcall	stringdir
   239  07A7  0086               	movwf	6	;volatile
   240  07A8                     l536:	
   241                           ;mcu5.c: 22: while(1){
   242                           
   243                           
   244                           ;mcu5.c: 24: if(RD0==1){
   245  07A8  1C08               	btfss	8,0	;volatile
   246  07A9  2FD3               	goto	l548
   247  07AA                     l25:	
   248                           ;mcu5.c: 25: while(RD0==1);
   249                           
   250  07AA  1808               	btfsc	8,0	;volatile
   251  07AB  2FAA               	goto	l25
   252                           
   253                           ;mcu5.c: 26: _delay((unsigned long)((10)*(4000000/4000.0)));
   254  07AC  300D               	movlw	13
   255  07AD  00F3               	movwf	??_main+1
   256  07AE  30FB               	movlw	251
   257  07AF  00F2               	movwf	??_main
   258  07B0                     u137:	
   259  07B0  0BF2               	decfsz	??_main,f
   260  07B1  2FB0               	goto	u137
   261  07B2  0BF3               	decfsz	??_main+1,f
   262  07B3  2FB0               	goto	u137
   263  07B4  2FB5               	nop2
   264                           
   265                           ;mcu5.c: 27: i++;
   266  07B5  3001               	movlw	1
   267  07B6  07F0               	addwf	_i,f
   268  07B7  1803               	skipnc
   269  07B8  0AF1               	incf	_i+1,f
   270  07B9  3000               	movlw	0
   271  07BA  07F1               	addwf	_i+1,f
   272                           
   273                           ;mcu5.c: 28: PORTB=dizi[i];
   274  07BB  0870               	movf	_i,w
   275  07BC  3E01               	addlw	low ((_dizi-__stringbase)| (0+32768))
   276  07BD  0084               	movwf	4
   277  07BE  120A  118A  2003  120A  118A  	fcall	stringdir
   278  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   279  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   280  07C5  0086               	movwf	6	;volatile
   281                           
   282                           ;mcu5.c: 30: if(i>9){
   283  07C6  0871               	movf	_i+1,w
   284  07C7  3A80               	xorlw	128
   285  07C8  00FF               	movwf	127
   286  07C9  3080               	movlw	128
   287  07CA  027F               	subwf	127,w
   288  07CB  1D03               	skipz
   289  07CC  2FCF               	goto	u95
   290  07CD  300A               	movlw	10
   291  07CE  0270               	subwf	_i,w
   292  07CF                     u95:	
   293  07CF  1C03               	skipc
   294  07D0  2FD3               	goto	l548
   295                           
   296                           ;mcu5.c: 31: i=0;
   297  07D1  01F0               	clrf	_i
   298  07D2  01F1               	clrf	_i+1
   299  07D3                     l548:	
   300                           
   301                           ;mcu5.c: 32: }
   302                           ;mcu5.c: 33: }
   303                           ;mcu5.c: 34: if(RD1==1){
   304  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   305  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   306  07D5  1C88               	btfss	8,1	;volatile
   307  07D6  2FA8               	goto	l536
   308  07D7                     l30:	
   309                           ;mcu5.c: 35: while(RD1==1);
   310                           
   311  07D7  1888               	btfsc	8,1	;volatile
   312  07D8  2FD7               	goto	l30
   313                           
   314                           ;mcu5.c: 36: _delay((unsigned long)((10)*(4000000/4000.0)));
   315  07D9  300D               	movlw	13
   316  07DA  00F3               	movwf	??_main+1
   317  07DB  30FB               	movlw	251
   318  07DC  00F2               	movwf	??_main
   319  07DD                     u147:	
   320  07DD  0BF2               	decfsz	??_main,f
   321  07DE  2FDD               	goto	u147
   322  07DF  0BF3               	decfsz	??_main+1,f
   323  07E0  2FDD               	goto	u147
   324  07E1  2FE2               	nop2
   325                           
   326                           ;mcu5.c: 37: i--;
   327  07E2  30FF               	movlw	255
   328  07E3  07F0               	addwf	_i,f
   329  07E4  1803               	skipnc
   330  07E5  0AF1               	incf	_i+1,f
   331  07E6  30FF               	movlw	255
   332  07E7  07F1               	addwf	_i+1,f
   333                           
   334                           ;mcu5.c: 38: PORTB=dizi[i];
   335  07E8  0870               	movf	_i,w
   336  07E9  3E01               	addlw	low ((_dizi-__stringbase)| (0+32768))
   337  07EA  0084               	movwf	4
   338  07EB  120A  118A  2003  120A  118A  	fcall	stringdir
   339  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   340  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   341  07F2  0086               	movwf	6	;volatile
   342                           
   343                           ;mcu5.c: 39: if(i<0){
   344  07F3  1FF1               	btfss	_i+1,7
   345  07F4  2FA8               	goto	l536
   346                           
   347                           ;mcu5.c: 40: i=10;
   348  07F5  300A               	movlw	10
   349  07F6  00F0               	movwf	_i
   350  07F7  3000               	movlw	0
   351  07F8  00F1               	movwf	_i+1
   352  07F9  2FA8               	goto	l536
   353  07FA                     __end_of_main:	
   354  007E                     btemp	set	126	;btemp
   355  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 06 21:40:37 2020

                      _i 0070                        pc 0002              __CFG_CP$OFF 0000  
                     l30 07D7                       l25 07AA                       u95 07CF  
                     fsr 0004              __CFG_LVP$ON 0000                      l536 07A8  
                    l548 07D3                      _RD0 0040                      _RD1 0041  
                    u137 07B0                      u147 07DD             __CFG_CPD$OFF 0000  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_WRT$OFF 0000  
                   _dizi 0009                     _main 0792                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0072  
          __CFG_WDTE$OFF 0000                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_dizi 0013             __end_of_main 07FA                   ??_main 0072  
         __CFG_PWRTE$OFF 0000  __end_of__initialization 07FC           __pcstackCOMMON 0072  
             __pmaintext 0792               __stringtab 0003     end_of_initialization 07FC  
    start_initialization 07FA              __pbssCOMMON 0070                ___latbits 0002  
              __pstrings 0003              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 0068                stringcode 0003                 stringdir 0003  
               stringtab 0003  
