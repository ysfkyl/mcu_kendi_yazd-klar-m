

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 07 17:18:54 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	strings
   110  0003                     __pstrings:	
   111  0003                     stringtab:	
   112  0003                     __stringtab:	
   113  0003                     stringcode:	
   114                           ;	String table - string pointers are 1 byte each
   115                           
   116  0003                     stringdir:	
   117  0003  3000               	movlw	high stringdir
   118  0004  008A               	movwf	10
   119  0005  0804               	movf	4,w
   120  0006  0A84               	incf	4,f
   121  0007  0782               	addwf	2,f
   122  0008                     __stringbase:	
   123  0008  3400               	retlw	0
   124  0009                     __end_of__stringtab:	
   125  0009                     _dizi:	
   126  0009  343F               	retlw	63
   127  000A  3406               	retlw	6
   128  000B  345B               	retlw	91
   129  000C  344F               	retlw	79
   130  000D  3466               	retlw	102
   131  000E  346D               	retlw	109
   132  000F  347D               	retlw	125
   133  0010  3407               	retlw	7
   134  0011  347F               	retlw	127
   135  0012  346F               	retlw	111
   136  0013                     __end_of_dizi:	
   137                           
   138                           	psect	nvBANK0
   139  0020                     __pnvBANK0:	
   140  0020                     _onlar:	
   141  0020                     	ds	2
   142  0022                     _birler:	
   143  0022                     	ds	2
   144  0007                     _PORTC	set	7
   145  0006                     _PORTB	set	6
   146  0039                     _RC1	set	57
   147  0038                     _RC0	set	56
   148  0087                     _TRISC	set	135
   149  0086                     _TRISB	set	134
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  07FA                     start_initialization:	
   155  07FA                     __initialization:	
   156                           
   157                           ; Clear objects allocated to COMMON
   158  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   159  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   160  07FC                     end_of_initialization:	
   161                           ;End of C runtime variable initialization code
   162                           
   163  07FC                     __end_of__initialization:	
   164  07FC  0183               	clrf	3
   165  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   166                           
   167                           	psect	bssCOMMON
   168  007B                     __pbssCOMMON:	
   169  007B                     _sayi:	
   170  007B                     	ds	2
   171                           
   172                           	psect	cstackCOMMON
   173  0070                     __pcstackCOMMON:	
   174  0070                     ?_main:	
   175  0070                     ?___awdiv:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ?___awmod:	
   179                           ; 2 bytes @ 0x0
   180                           
   181  0070                     ___awdiv@divisor:	
   182                           ; 2 bytes @ 0x0
   183                           
   184  0070                     ___awmod@divisor:	
   185                           ; 2 bytes @ 0x0
   186                           
   187                           
   188                           ; 2 bytes @ 0x0
   189  0070                     	ds	2
   190  0072                     ___awdiv@dividend:	
   191  0072                     ___awmod@dividend:	
   192                           ; 2 bytes @ 0x2
   193                           
   194                           
   195                           ; 2 bytes @ 0x2
   196  0072                     	ds	2
   197  0074                     ??___awdiv:	
   198  0074                     ??___awmod:	
   199                           ; 1 bytes @ 0x4
   200                           
   201                           
   202                           ; 1 bytes @ 0x4
   203  0074                     	ds	1
   204  0075                     ___awdiv@counter:	
   205  0075                     ___awmod@counter:	
   206                           ; 1 bytes @ 0x5
   207                           
   208                           
   209                           ; 1 bytes @ 0x5
   210  0075                     	ds	1
   211  0076                     ___awdiv@sign:	
   212  0076                     ___awmod@sign:	
   213                           ; 1 bytes @ 0x6
   214                           
   215                           
   216                           ; 1 bytes @ 0x6
   217  0076                     	ds	1
   218  0077                     ___awdiv@quotient:	
   219                           
   220                           ; 2 bytes @ 0x7
   221  0077                     	ds	2
   222  0079                     ??_main:	
   223                           
   224                           ; 1 bytes @ 0x9
   225  0079                     	ds	2
   226                           
   227                           	psect	maintext
   228  0794                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "mcu66.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          2       0       0       0       0
   251 ;;      Totals:         2       0       0       0       0
   252 ;;Total ram usage:        2 bytes
   253 ;; Hardware stack levels required when called:    1
   254 ;; This function calls:
   255 ;;		___awdiv
   256 ;;		___awmod
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           
   263                           ;psect for function _main
   264  0794                     _main:	
   265                           
   266                           ;mcu66.c: 19: TRISB = 0x00;
   267                           
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   270  0794  1683               	bsf	3,5	;RP0=1, select bank1
   271  0795  1303               	bcf	3,6	;RP1=0, select bank1
   272  0796  0186               	clrf	6	;volatile
   273                           
   274                           ;mcu66.c: 20: PORTB = 0;
   275  0797  1283               	bcf	3,5	;RP0=0, select bank0
   276  0798  1303               	bcf	3,6	;RP1=0, select bank0
   277  0799  0186               	clrf	6	;volatile
   278                           
   279                           ;mcu66.c: 21: TRISC = 0x00;
   280  079A  1683               	bsf	3,5	;RP0=1, select bank1
   281  079B  1303               	bcf	3,6	;RP1=0, select bank1
   282  079C  0187               	clrf	7	;volatile
   283                           
   284                           ;mcu66.c: 22: PORTC = 0x03;
   285  079D  3003               	movlw	3
   286  079E  1283               	bcf	3,5	;RP0=0, select bank0
   287  079F  1303               	bcf	3,6	;RP1=0, select bank0
   288  07A0  0087               	movwf	7	;volatile
   289  07A1                     l684:	
   290                           ;mcu66.c: 24: while (1) {
   291                           
   292                           
   293                           ;mcu66.c: 25: onlar=sayi/10;
   294  07A1  300A               	movlw	10
   295  07A2  00F0               	movwf	___awdiv@divisor
   296  07A3  3000               	movlw	0
   297  07A4  00F1               	movwf	___awdiv@divisor+1
   298  07A5  087C               	movf	_sayi+1,w
   299  07A6  00F3               	movwf	___awdiv@dividend+1
   300  07A7  087B               	movf	_sayi,w
   301  07A8  00F2               	movwf	___awdiv@dividend
   302  07A9  120A  118A  273B  120A  118A  	fcall	___awdiv
   303  07AE  0871               	movf	?___awdiv+1,w
   304  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   305  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   306  07B1  00A1               	movwf	_onlar+1
   307  07B2  0870               	movf	?___awdiv,w
   308  07B3  00A0               	movwf	_onlar
   309                           
   310                           ;mcu66.c: 26: birler=sayi%10;
   311  07B4  300A               	movlw	10
   312  07B5  00F0               	movwf	___awmod@divisor
   313  07B6  3000               	movlw	0
   314  07B7  00F1               	movwf	___awmod@divisor+1
   315  07B8  087C               	movf	_sayi+1,w
   316  07B9  00F3               	movwf	___awmod@dividend+1
   317  07BA  087B               	movf	_sayi,w
   318  07BB  00F2               	movwf	___awmod@dividend
   319  07BC  120A  118A  26F0  120A  118A  	fcall	___awmod
   320  07C1  0871               	movf	?___awmod+1,w
   321  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   322  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   323  07C4  00A3               	movwf	_birler+1
   324  07C5  0870               	movf	?___awmod,w
   325  07C6  00A2               	movwf	_birler
   326                           
   327                           ;mcu66.c: 28: RC0= 0;
   328  07C7  1007               	bcf	7,0	;volatile
   329                           
   330                           ;mcu66.c: 29: PORTB = dizi[birler];
   331  07C8  0822               	movf	_birler,w
   332  07C9  3E01               	addlw	low ((_dizi-__stringbase)| (0+32768))
   333  07CA  0084               	movwf	4
   334  07CB  120A  118A  2003  120A  118A  	fcall	stringdir
   335  07D0  0086               	movwf	6	;volatile
   336                           
   337                           ;mcu66.c: 30: _delay((unsigned long)((100)*(4000000/4000.0)));
   338  07D1  3082               	movlw	130
   339  07D2  00FA               	movwf	??_main+1
   340  07D3  30DD               	movlw	221
   341  07D4  00F9               	movwf	??_main
   342  07D5                     u397:	
   343  07D5  0BF9               	decfsz	??_main,f
   344  07D6  2FD5               	goto	u397
   345  07D7  0BFA               	decfsz	??_main+1,f
   346  07D8  2FD5               	goto	u397
   347  07D9  2FDA               	nop2
   348                           
   349                           ;mcu66.c: 31: RC0=1;
   350  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   351  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   352  07DC  1407               	bsf	7,0	;volatile
   353                           
   354                           ;mcu66.c: 33: RC1= 0;
   355  07DD  1087               	bcf	7,1	;volatile
   356                           
   357                           ;mcu66.c: 34: PORTB = dizi[onlar];
   358  07DE  0820               	movf	_onlar,w
   359  07DF  3E01               	addlw	low ((_dizi-__stringbase)| (0+32768))
   360  07E0  0084               	movwf	4
   361  07E1  120A  118A  2003  120A  118A  	fcall	stringdir
   362  07E6  0086               	movwf	6	;volatile
   363                           
   364                           ;mcu66.c: 35: _delay((unsigned long)((100)*(4000000/4000.0)));
   365  07E7  3082               	movlw	130
   366  07E8  00FA               	movwf	??_main+1
   367  07E9  30DD               	movlw	221
   368  07EA  00F9               	movwf	??_main
   369  07EB                     u407:	
   370  07EB  0BF9               	decfsz	??_main,f
   371  07EC  2FEB               	goto	u407
   372  07ED  0BFA               	decfsz	??_main+1,f
   373  07EE  2FEB               	goto	u407
   374  07EF  2FF0               	nop2
   375                           
   376                           ;mcu66.c: 36: RC1=1;
   377  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   378  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   379  07F2  1487               	bsf	7,1	;volatile
   380                           
   381                           ;mcu66.c: 38: sayi++ ;}
   382  07F3  3001               	movlw	1
   383  07F4  07FB               	addwf	_sayi,f
   384  07F5  1803               	skipnc
   385  07F6  0AFC               	incf	_sayi+1,f
   386  07F7  3000               	movlw	0
   387  07F8  07FC               	addwf	_sayi+1,f
   388  07F9  2FA1               	goto	l684
   389  07FA                     __end_of_main:	
   390                           
   391                           	psect	text1
   392  06F0                     __ptext1:	
   393 ;; *************** function ___awmod *****************
   394 ;; Defined at:
   395 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  divisor         2    0[COMMON] int 
   398 ;;  dividend        2    2[COMMON] int 
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  sign            1    6[COMMON] unsigned char 
   401 ;;  counter         1    5[COMMON] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  2    0[COMMON] int 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         4       0       0       0       0
   412 ;;      Locals:         2       0       0       0       0
   413 ;;      Temps:          1       0       0       0       0
   414 ;;      Totals:         7       0       0       0       0
   415 ;;Total ram usage:        7 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function ___awmod
   426  06F0                     ___awmod:	
   427                           
   428                           ;incstack = 0
   429                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   430  06F0  01F6               	clrf	___awmod@sign
   431  06F1  1FF3               	btfss	___awmod@dividend+1,7
   432  06F2  2EFA               	goto	l650
   433  06F3  09F2               	comf	___awmod@dividend,f
   434  06F4  09F3               	comf	___awmod@dividend+1,f
   435  06F5  0AF2               	incf	___awmod@dividend,f
   436  06F6  1903               	skipnz
   437  06F7  0AF3               	incf	___awmod@dividend+1,f
   438  06F8  01F6               	clrf	___awmod@sign
   439  06F9  0AF6               	incf	___awmod@sign,f
   440  06FA                     l650:	
   441  06FA  1FF1               	btfss	___awmod@divisor+1,7
   442  06FB  2F01               	goto	l654
   443  06FC  09F0               	comf	___awmod@divisor,f
   444  06FD  09F1               	comf	___awmod@divisor+1,f
   445  06FE  0AF0               	incf	___awmod@divisor,f
   446  06FF  1903               	skipnz
   447  0700  0AF1               	incf	___awmod@divisor+1,f
   448  0701                     l654:	
   449  0701  0870               	movf	___awmod@divisor,w
   450  0702  0471               	iorwf	___awmod@divisor+1,w
   451  0703  1903               	btfsc	3,2
   452  0704  2F2E               	goto	l672
   453  0705  01F5               	clrf	___awmod@counter
   454  0706  0AF5               	incf	___awmod@counter,f
   455  0707                     l662:	
   456  0707  1BF1               	btfsc	___awmod@divisor+1,7
   457  0708  2F15               	goto	l664
   458  0709  3001               	movlw	1
   459  070A                     u335:	
   460  070A  1003               	clrc
   461  070B  0DF0               	rlf	___awmod@divisor,f
   462  070C  0DF1               	rlf	___awmod@divisor+1,f
   463  070D  3EFF               	addlw	-1
   464  070E  1D03               	skipz
   465  070F  2F0A               	goto	u335
   466  0710  3001               	movlw	1
   467  0711  00F4               	movwf	??___awmod
   468  0712  0874               	movf	??___awmod,w
   469  0713  07F5               	addwf	___awmod@counter,f
   470  0714  2F07               	goto	l662
   471  0715                     l664:	
   472  0715  0871               	movf	___awmod@divisor+1,w
   473  0716  0273               	subwf	___awmod@dividend+1,w
   474  0717  1D03               	skipz
   475  0718  2F1B               	goto	u355
   476  0719  0870               	movf	___awmod@divisor,w
   477  071A  0272               	subwf	___awmod@dividend,w
   478  071B                     u355:	
   479  071B  1C03               	skipc
   480  071C  2F23               	goto	l668
   481  071D  0870               	movf	___awmod@divisor,w
   482  071E  02F2               	subwf	___awmod@dividend,f
   483  071F  0871               	movf	___awmod@divisor+1,w
   484  0720  1C03               	skipc
   485  0721  03F3               	decf	___awmod@dividend+1,f
   486  0722  02F3               	subwf	___awmod@dividend+1,f
   487  0723                     l668:	
   488  0723  3001               	movlw	1
   489  0724                     u365:	
   490  0724  1003               	clrc
   491  0725  0CF1               	rrf	___awmod@divisor+1,f
   492  0726  0CF0               	rrf	___awmod@divisor,f
   493  0727  3EFF               	addlw	-1
   494  0728  1D03               	skipz
   495  0729  2F24               	goto	u365
   496  072A  3001               	movlw	1
   497  072B  02F5               	subwf	___awmod@counter,f
   498  072C  1D03               	btfss	3,2
   499  072D  2F15               	goto	l664
   500  072E                     l672:	
   501  072E  0876               	movf	___awmod@sign,w
   502  072F  1903               	btfsc	3,2
   503  0730  2F36               	goto	l676
   504  0731  09F2               	comf	___awmod@dividend,f
   505  0732  09F3               	comf	___awmod@dividend+1,f
   506  0733  0AF2               	incf	___awmod@dividend,f
   507  0734  1903               	skipnz
   508  0735  0AF3               	incf	___awmod@dividend+1,f
   509  0736                     l676:	
   510  0736  0873               	movf	___awmod@dividend+1,w
   511  0737  00F1               	movwf	?___awmod+1
   512  0738  0872               	movf	___awmod@dividend,w
   513  0739  00F0               	movwf	?___awmod
   514  073A  0008               	return
   515  073B                     __end_of___awmod:	
   516                           
   517                           	psect	text2
   518  073B                     __ptext2:	
   519 ;; *************** function ___awdiv *****************
   520 ;; Defined at:
   521 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  divisor         2    0[COMMON] int 
   524 ;;  dividend        2    2[COMMON] int 
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  quotient        2    7[COMMON] int 
   527 ;;  sign            1    6[COMMON] unsigned char 
   528 ;;  counter         1    5[COMMON] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2    0[COMMON] int 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         4       0       0       0       0
   539 ;;      Locals:         4       0       0       0       0
   540 ;;      Temps:          1       0       0       0       0
   541 ;;      Totals:         9       0       0       0       0
   542 ;;Total ram usage:        9 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function ___awdiv
   553  073B                     ___awdiv:	
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   557  073B  01F6               	clrf	___awdiv@sign
   558  073C  1FF1               	btfss	___awdiv@divisor+1,7
   559  073D  2F45               	goto	l606
   560  073E  09F0               	comf	___awdiv@divisor,f
   561  073F  09F1               	comf	___awdiv@divisor+1,f
   562  0740  0AF0               	incf	___awdiv@divisor,f
   563  0741  1903               	skipnz
   564  0742  0AF1               	incf	___awdiv@divisor+1,f
   565  0743  01F6               	clrf	___awdiv@sign
   566  0744  0AF6               	incf	___awdiv@sign,f
   567  0745                     l606:	
   568  0745  1FF3               	btfss	___awdiv@dividend+1,7
   569  0746  2F50               	goto	l612
   570  0747  09F2               	comf	___awdiv@dividend,f
   571  0748  09F3               	comf	___awdiv@dividend+1,f
   572  0749  0AF2               	incf	___awdiv@dividend,f
   573  074A  1903               	skipnz
   574  074B  0AF3               	incf	___awdiv@dividend+1,f
   575  074C  3001               	movlw	1
   576  074D  00F4               	movwf	??___awdiv
   577  074E  0874               	movf	??___awdiv,w
   578  074F  06F6               	xorwf	___awdiv@sign,f
   579  0750                     l612:	
   580  0750  01F7               	clrf	___awdiv@quotient
   581  0751  01F8               	clrf	___awdiv@quotient+1
   582  0752  0870               	movf	___awdiv@divisor,w
   583  0753  0471               	iorwf	___awdiv@divisor+1,w
   584  0754  1903               	btfsc	3,2
   585  0755  2F87               	goto	l634
   586  0756  01F5               	clrf	___awdiv@counter
   587  0757  0AF5               	incf	___awdiv@counter,f
   588  0758                     l622:	
   589  0758  1BF1               	btfsc	___awdiv@divisor+1,7
   590  0759  2F66               	goto	l624
   591  075A  3001               	movlw	1
   592  075B                     u235:	
   593  075B  1003               	clrc
   594  075C  0DF0               	rlf	___awdiv@divisor,f
   595  075D  0DF1               	rlf	___awdiv@divisor+1,f
   596  075E  3EFF               	addlw	-1
   597  075F  1D03               	skipz
   598  0760  2F5B               	goto	u235
   599  0761  3001               	movlw	1
   600  0762  00F4               	movwf	??___awdiv
   601  0763  0874               	movf	??___awdiv,w
   602  0764  07F5               	addwf	___awdiv@counter,f
   603  0765  2F58               	goto	l622
   604  0766                     l624:	
   605  0766  3001               	movlw	1
   606  0767                     u255:	
   607  0767  1003               	clrc
   608  0768  0DF7               	rlf	___awdiv@quotient,f
   609  0769  0DF8               	rlf	___awdiv@quotient+1,f
   610  076A  3EFF               	addlw	-1
   611  076B  1D03               	skipz
   612  076C  2F67               	goto	u255
   613  076D  0871               	movf	___awdiv@divisor+1,w
   614  076E  0273               	subwf	___awdiv@dividend+1,w
   615  076F  1D03               	skipz
   616  0770  2F73               	goto	u265
   617  0771  0870               	movf	___awdiv@divisor,w
   618  0772  0272               	subwf	___awdiv@dividend,w
   619  0773                     u265:	
   620  0773  1C03               	skipc
   621  0774  2F7C               	goto	l630
   622  0775  0870               	movf	___awdiv@divisor,w
   623  0776  02F2               	subwf	___awdiv@dividend,f
   624  0777  0871               	movf	___awdiv@divisor+1,w
   625  0778  1C03               	skipc
   626  0779  03F3               	decf	___awdiv@dividend+1,f
   627  077A  02F3               	subwf	___awdiv@dividend+1,f
   628  077B  1477               	bsf	___awdiv@quotient,0
   629  077C                     l630:	
   630  077C  3001               	movlw	1
   631  077D                     u275:	
   632  077D  1003               	clrc
   633  077E  0CF1               	rrf	___awdiv@divisor+1,f
   634  077F  0CF0               	rrf	___awdiv@divisor,f
   635  0780  3EFF               	addlw	-1
   636  0781  1D03               	skipz
   637  0782  2F7D               	goto	u275
   638  0783  3001               	movlw	1
   639  0784  02F5               	subwf	___awdiv@counter,f
   640  0785  1D03               	btfss	3,2
   641  0786  2F66               	goto	l624
   642  0787                     l634:	
   643  0787  0876               	movf	___awdiv@sign,w
   644  0788  1903               	btfsc	3,2
   645  0789  2F8F               	goto	l638
   646  078A  09F7               	comf	___awdiv@quotient,f
   647  078B  09F8               	comf	___awdiv@quotient+1,f
   648  078C  0AF7               	incf	___awdiv@quotient,f
   649  078D  1903               	skipnz
   650  078E  0AF8               	incf	___awdiv@quotient+1,f
   651  078F                     l638:	
   652  078F  0878               	movf	___awdiv@quotient+1,w
   653  0790  00F1               	movwf	?___awdiv+1
   654  0791  0877               	movf	___awdiv@quotient,w
   655  0792  00F0               	movwf	?___awdiv
   656  0793  0008               	return
   657  0794                     __end_of___awdiv:	
   658  007E                     btemp	set	126	;btemp
   659  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     808
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 07 17:18:54 2020

                      pc 0002              __CFG_CP$OFF 0000             ___awdiv@sign 0076  
                     fsr 0004              __CFG_LVP$ON 0000                      l612 0750  
                    l630 077C                      l622 0758                      l606 0745  
                    l624 0766                      l634 0787                      l650 06FA  
                    l638 078F                      l662 0707                      l654 0701  
                    l664 0715                      l672 072E                      l676 0736  
                    l668 0723                      l684 07A1                      _RC0 0038  
                    _RC1 0039                      u235 075B                      u255 0767  
                    u335 070A                      u407 07EB                      u265 0773  
           __CFG_CPD$OFF 0000                      u275 077D                      u355 071B  
                    u365 0724                      u397 07D5                      fsr0 0004  
           ___awmod@sign 0076             __CFG_FOSC$XT 0000             __CFG_WRT$OFF 0000  
                   _dizi 0009                     _main 0794                     _sayi 007B  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070          __end_of___awdiv 0794            __CFG_WDTE$OFF 0000  
        __end_of___awmod 073B          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    _onlar 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_dizi 0013             __end_of_main 07FA                   ??_main 0079  
       ___awdiv@dividend 0072           __CFG_PWRTE$OFF 0000                ??___awdiv 0074  
              ??___awmod 0074                   _birler 0022         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0794               __stringtab 0003  
                ___awdiv 073B                  ___awmod 06F0                  __ptext1 06F0  
                __ptext2 073B         ___awmod@dividend 0072     end_of_initialization 07FC  
    start_initialization 07FA              __pbssCOMMON 007B                ___latbits 0002  
              __pnvBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
              __pstrings 0003              __stringbase 0008         __size_of___awdiv 0059  
       __size_of___awmod 004B       __end_of__stringtab 0009            __size_of_main 0066  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
