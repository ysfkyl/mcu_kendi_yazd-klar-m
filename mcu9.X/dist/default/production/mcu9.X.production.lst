

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 08 08:45:51 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109                           
   110                           	psect	idataBANK0
   111  0755                     __pidataBANK0:	
   112                           
   113                           ;initializer for _satir
   114  0755  3403               	retlw	3
   115  0756  3400               	retlw	0
   116  0757  343A               	retlw	58
   117  0758  3400               	retlw	0
   118  0759  343B               	retlw	59
   119  075A  3400               	retlw	0
   120  075B  343A               	retlw	58
   121  075C  3400               	retlw	0
   122  075D  3403               	retlw	3
   123  075E  3400               	retlw	0
   124  075F  3440               	retlw	64
   125  0760  3400               	retlw	0
   126  0761  345E               	retlw	94
   127  0762  3400               	retlw	0
   128  0763  341E               	retlw	30
   129  0764  3400               	retlw	0
   130  0765  345E               	retlw	94
   131  0766  3400               	retlw	0
   132  0767  345E               	retlw	94
   133  0768  3400               	retlw	0
   134                           
   135                           	psect	nvCOMMON
   136  007B                     __pnvCOMMON:	
   137  007B                     _k:	
   138  007B                     	ds	2
   139  0006                     _PORTB	set	6
   140  0007                     _PORTC	set	7
   141  0087                     _TRISC	set	135
   142  0086                     _TRISB	set	134
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  07EC                     start_initialization:	
   148  07EC                     __initialization:	
   149                           
   150                           ; Initialize objects allocated to BANK0
   151  07EC  1383               	bcf	3,7	;select IRP bank0
   152  07ED  3034               	movlw	low (__pdataBANK0+20)
   153  07EE  00FD               	movwf	btemp+-1
   154  07EF  3007               	movlw	high __pidataBANK0
   155  07F0  00FE               	movwf	btemp
   156  07F1  3055               	movlw	low __pidataBANK0
   157  07F2  00FF               	movwf	btemp+1
   158  07F3  3020               	movlw	low __pdataBANK0
   159  07F4  0084               	movwf	4
   160  07F5  120A  118A  2748   	fcall	init_ram0
   161                           
   162                           ; Clear objects allocated to COMMON
   163  07F8  01F7               	clrf	__pbssCOMMON& (0+127)
   164  07F9  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   165  07FA  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   166  07FB  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   167  07FC                     end_of_initialization:	
   168                           ;End of C runtime variable initialization code
   169                           
   170  07FC                     __end_of__initialization:	
   171  07FC  0183               	clrf	3
   172  07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMMON
   175  0077                     __pbssCOMMON:	
   176  0077                     _j:	
   177  0077                     	ds	2
   178  0079                     _i:	
   179  0079                     	ds	2
   180                           
   181                           	psect	dataBANK0
   182  0020                     __pdataBANK0:	
   183  0020                     _satir:	
   184  0020                     	ds	20
   185                           
   186                           	psect	inittext
   187  0744                     init_fetch0:	
   188                           ;	Called with low address in FSR and high address in W
   189                           
   190  0744  087E               	movf	126,w
   191  0745  008A               	movwf	10
   192  0746  087F               	movf	127,w
   193  0747  0082               	movwf	2
   194  0748                     init_ram0:	
   195                           ;Called with:
   196                           ;	high address of idata address in btemp 
   197                           ;	low address of idata address in btemp+1 
   198                           ;	low address of data in FSR
   199                           ;	high address + 1 of data in btemp-1
   200                           
   201  0748  2744  120A  118A   	fcall	init_fetch0
   202  074B  0080               	movwf	0
   203  074C  0A84               	incf	4,f
   204  074D  0804               	movf	4,w
   205  074E  067D               	xorwf	125,w
   206  074F  1903               	btfsc	3,2
   207  0750  3400               	retlw	0
   208  0751  0AFF               	incf	127,f
   209  0752  1903               	btfsc	3,2
   210  0753  0AFE               	incf	126,f
   211  0754  2F48               	goto	init_ram0
   212                           
   213                           	psect	cstackCOMMON
   214  0070                     __pcstackCOMMON:	
   215  0070                     ?_main:	
   216  0070                     ?___bmul:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ___bmul@multiplicand:	
   220                           ; 1 bytes @ 0x0
   221                           
   222                           
   223                           ; 1 bytes @ 0x0
   224  0070                     	ds	1
   225  0071                     ??___bmul:	
   226                           
   227                           ; 1 bytes @ 0x1
   228  0071                     	ds	1
   229  0072                     ___bmul@product:	
   230                           
   231                           ; 1 bytes @ 0x2
   232  0072                     	ds	1
   233  0073                     ___bmul@multiplier:	
   234                           
   235                           ; 1 bytes @ 0x3
   236  0073                     	ds	1
   237  0074                     ??_main:	
   238                           
   239                           ; 1 bytes @ 0x4
   240  0074                     	ds	3
   241                           
   242                           	psect	maintext
   243  0769                     __pmaintext:	
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 16 in file "mcu9.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : B00/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          3       0       0       0       0
   266 ;;      Totals:         3       0       0       0       0
   267 ;;Total ram usage:        3 bytes
   268 ;; Hardware stack levels required when called:    1
   269 ;; This function calls:
   270 ;;		___bmul
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           
   277                           ;psect for function _main
   278  0769                     _main:	
   279                           
   280                           ;mcu9.c: 18: TRISB = 0x00;
   281                           
   282                           ;incstack = 0
   283                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   284  0769  1683               	bsf	3,5	;RP0=1, select bank1
   285  076A  1303               	bcf	3,6	;RP1=0, select bank1
   286  076B  0186               	clrf	6	;volatile
   287                           
   288                           ;mcu9.c: 19: TRISC = 0x00;
   289  076C  0187               	clrf	7	;volatile
   290  076D                     l23:	
   291                           ;mcu9.c: 21: while (1) {
   292                           
   293                           
   294                           ;mcu9.c: 22: for(k=0;k<2;k++){
   295  076D  01FB               	clrf	_k
   296  076E  01FC               	clrf	_k+1
   297  076F                     L1:	
   298  076F  087C               	movf	_k+1,w
   299  0770  3A80               	xorlw	128
   300  0771  00FF               	movwf	127
   301  0772  3080               	movlw	128
   302  0773  027F               	subwf	127,w
   303  0774  1D03               	skipz
   304  0775  2F78               	goto	u125
   305  0776  3002               	movlw	2
   306  0777  027B               	subwf	_k,w
   307  0778                     u125:	
   308  0778  1803               	btfsc	3,0
   309  0779  2F6D               	goto	l23
   310                           
   311                           ;mcu9.c: 23: for(j=0;j<100;j++){
   312  077A  01F7               	clrf	_j
   313  077B  01F8               	clrf	_j+1
   314  077C  0878               	movf	_j+1,w
   315  077D  3A80               	xorlw	128
   316  077E  00FF               	movwf	127
   317  077F  3080               	movlw	128
   318  0780  027F               	subwf	127,w
   319  0781  1D03               	skipz
   320  0782  2F85               	goto	u135
   321  0783  3064               	movlw	100
   322  0784  0277               	subwf	_j,w
   323  0785                     u135:	
   324  0785  1803               	btfsc	3,0
   325  0786  2FE5               	goto	l592
   326  0787                     l570:	
   327                           
   328                           ;mcu9.c: 24: PORTC=1;
   329  0787  3001               	movlw	1
   330  0788  1283               	bcf	3,5	;RP0=0, select bank0
   331  0789  1303               	bcf	3,6	;RP1=0, select bank0
   332  078A  0087               	movwf	7	;volatile
   333                           
   334                           ;mcu9.c: 25: for(i=0;i<5;i++){
   335  078B  01F9               	clrf	_i
   336  078C  01FA               	clrf	_i+1
   337  078D  087A               	movf	_i+1,w
   338  078E  3A80               	xorlw	128
   339  078F  00FF               	movwf	127
   340  0790  3080               	movlw	128
   341  0791  027F               	subwf	127,w
   342  0792  1D03               	skipz
   343  0793  2F96               	goto	u145
   344  0794  3005               	movlw	5
   345  0795  0279               	subwf	_i,w
   346  0796                     u145:	
   347  0796  1803               	btfsc	3,0
   348  0797  2FD4               	goto	l588
   349  0798                     l578:	
   350                           
   351                           ;mcu9.c: 26: PORTB = satir[k][i];
   352  0798  0879               	movf	_i,w
   353  0799  00F4               	movwf	??_main
   354  079A  3001               	movlw	1
   355  079B                     u155:	
   356  079B  1003               	clrc
   357  079C  0DF4               	rlf	??_main,f
   358  079D  3EFF               	addlw	-1
   359  079E  1D03               	skipz
   360  079F  2F9B               	goto	u155
   361  07A0  300A               	movlw	10
   362  07A1  00F5               	movwf	??_main+1
   363  07A2  0875               	movf	??_main+1,w
   364  07A3  00F0               	movwf	___bmul@multiplicand
   365  07A4  087B               	movf	_k,w
   366  07A5  120A  118A  2733  120A  118A  	fcall	___bmul
   367  07AA  3E20               	addlw	(low (_satir| 0))& (0+255)
   368  07AB  0774               	addwf	??_main,w
   369  07AC  00F6               	movwf	??_main+2
   370  07AD  0876               	movf	??_main+2,w
   371  07AE  0084               	movwf	4
   372  07AF  1383               	bcf	3,7	;select IRP bank0
   373  07B0  0800               	movf	0,w
   374  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   375  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   376  07B3  0086               	movwf	6	;volatile
   377                           
   378                           ;mcu9.c: 27: _delay((unsigned long)((10)*(4000000/4000.0)));
   379  07B4  300D               	movlw	13
   380  07B5  00F5               	movwf	??_main+1
   381  07B6  30FB               	movlw	251
   382  07B7  00F4               	movwf	??_main
   383  07B8                     u197:	
   384  07B8  0BF4               	decfsz	??_main,f
   385  07B9  2FB8               	goto	u197
   386  07BA  0BF5               	decfsz	??_main+1,f
   387  07BB  2FB8               	goto	u197
   388  07BC  2FBD               	nop2
   389                           
   390                           ;mcu9.c: 28: PORTC=PORTC<<1;
   391  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   392  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   393  07BF  0807               	movf	7,w	;volatile
   394  07C0  00F4               	movwf	??_main
   395  07C1  0774               	addwf	??_main,w
   396  07C2  0087               	movwf	7	;volatile
   397  07C3  3001               	movlw	1
   398  07C4  07F9               	addwf	_i,f
   399  07C5  1803               	skipnc
   400  07C6  0AFA               	incf	_i+1,f
   401  07C7  3000               	movlw	0
   402  07C8  07FA               	addwf	_i+1,f
   403  07C9  087A               	movf	_i+1,w
   404  07CA  3A80               	xorlw	128
   405  07CB  00FF               	movwf	127
   406  07CC  3080               	movlw	128
   407  07CD  027F               	subwf	127,w
   408  07CE  1D03               	skipz
   409  07CF  2FD2               	goto	u165
   410  07D0  3005               	movlw	5
   411  07D1  0279               	subwf	_i,w
   412  07D2                     u165:	
   413  07D2  1C03               	skipc
   414  07D3  2F98               	goto	l578
   415  07D4                     l588:	
   416  07D4  3001               	movlw	1
   417  07D5  07F7               	addwf	_j,f
   418  07D6  1803               	skipnc
   419  07D7  0AF8               	incf	_j+1,f
   420  07D8  3000               	movlw	0
   421  07D9  07F8               	addwf	_j+1,f
   422  07DA  0878               	movf	_j+1,w
   423  07DB  3A80               	xorlw	128
   424  07DC  00FF               	movwf	127
   425  07DD  3080               	movlw	128
   426  07DE  027F               	subwf	127,w
   427  07DF  1D03               	skipz
   428  07E0  2FE3               	goto	u175
   429  07E1  3064               	movlw	100
   430  07E2  0277               	subwf	_j,w
   431  07E3                     u175:	
   432  07E3  1C03               	skipc
   433  07E4  2F87               	goto	l570
   434  07E5                     l592:	
   435  07E5  3001               	movlw	1
   436  07E6  07FB               	addwf	_k,f
   437  07E7  1803               	skipnc
   438  07E8  0AFC               	incf	_k+1,f
   439  07E9  3000               	movlw	0
   440  07EA  07FC               	addwf	_k+1,f
   441  07EB  2F6F               	goto	L1
   442  07EC                     __end_of_main:	
   443                           
   444                           	psect	text1
   445  0733                     __ptext1:	
   446 ;; *************** function ___bmul *****************
   447 ;; Defined at:
   448 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  multiplier      1    wreg     unsigned char 
   451 ;;  multiplicand    1    0[COMMON] unsigned char 
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  multiplier      1    3[COMMON] unsigned char 
   454 ;;  product         1    2[COMMON] unsigned char 
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      unsigned char 
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         1       0       0       0       0
   465 ;;      Locals:         2       0       0       0       0
   466 ;;      Temps:          1       0       0       0       0
   467 ;;      Totals:         4       0       0       0       0
   468 ;;Total ram usage:        4 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function ___bmul
   479  0733                     ___bmul:	
   480                           
   481                           ;incstack = 0
   482                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   483                           ;___bmul@multiplier stored from wreg
   484  0733  00F3               	movwf	___bmul@multiplier
   485  0734  01F2               	clrf	___bmul@product
   486  0735                     l546:	
   487  0735  1C73               	btfss	___bmul@multiplier,0
   488  0736  2F3B               	goto	l550
   489  0737  0870               	movf	___bmul@multiplicand,w
   490  0738  00F1               	movwf	??___bmul
   491  0739  0871               	movf	??___bmul,w
   492  073A  07F2               	addwf	___bmul@product,f
   493  073B                     l550:	
   494  073B  1003               	clrc
   495  073C  0DF0               	rlf	___bmul@multiplicand,f
   496  073D  1003               	clrc
   497  073E  0CF3               	rrf	___bmul@multiplier,f
   498  073F  0873               	movf	___bmul@multiplier,w
   499  0740  1D03               	btfss	3,2
   500  0741  2F35               	goto	l546
   501  0742  0872               	movf	___bmul@product,w
   502  0743  0008               	return
   503  0744                     __end_of___bmul:	
   504  007E                     btemp	set	126	;btemp
   505  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     118
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 08 08:45:51 2020

                      _i 0079                        _j 0077                        _k 007B  
                      pc 0002           ___bmul@product 0072              __CFG_CP$OFF 0000  
                     l23 076D                       fsr 0004              __CFG_LVP$ON 0000  
                    l550 073B                      l546 0735                      l570 0787  
                    l592 07E5                      l578 0798                      l588 07D4  
                    u125 0778                      u135 0785                      u145 0796  
                    u155 079B                      u165 07D2                      u175 07E3  
           __CFG_CPD$OFF 0000                      u197 07B8                      fsr0 0004  
                    indf 0000             __CFG_FOSC$XT 0000             __CFG_WRT$OFF 0000  
                   _main 0769                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000        ___bmul@multiplier 0073                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    _satir 0020  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EC             __end_of_main 07EC                   ??_main 0074  
         __CFG_PWRTE$OFF 0000                   ___bmul 0733  __end_of__initialization 07FC  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             __pidataBANK0 0755  
             __pnvCOMMON 007B               __pmaintext 0769                  ?___bmul 0070  
        __size_of___bmul 0011                  __ptext1 0733     end_of_initialization 07FC  
         __end_of___bmul 0744      start_initialization 07EC                 ??___bmul 0071  
             init_fetch0 0744              __pdataBANK0 0020              __pbssCOMMON 0077  
              ___latbits 0002            __size_of_main 0083                 init_ram0 0748  
